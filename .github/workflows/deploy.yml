name: Deploy to Production

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v3

    # Add your deployment steps here
    # Examples:
    # - Deploy to AWS
    # - Deploy to Heroku
    # - Deploy to Digital Ocean
    
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy Backend
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      run: |
        # Add your backend deployment commands here
        echo "Deploying backend..."
        # Example: rsync -avz --delete ./backend/ $DEPLOY_USER@$DEPLOY_HOST:/var/www/backend/

    - name: Deploy Frontend
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      run: |
        # Add your frontend deployment commands here
        echo "Deploying frontend..."
        # Example: rsync -avz --delete ./frontend/dist/ $DEPLOY_USER@$DEPLOY_HOST:/var/www/html/

    - name: Run Database Migrations
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        cd backend
        npm ci
        npx prisma migrate deploy

    - name: Notify on Success
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'Production deployment successful! üöÄ'
        SLACK_COLOR: good

    - name: Notify on Failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: '‚ùå Production deployment failed!'
        SLACK_COLOR: danger 