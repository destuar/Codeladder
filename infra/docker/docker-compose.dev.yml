# =============================================================================
# CodeLadder Development Docker Compose Configuration
# 
# This file defines the development environment services:
# - Backend: Node.js/Express API server
# - Frontend: React/Vite development server
# 
# Features:
# - Hot reloading for both frontend and backend
# - Health checks for service orchestration
# - Shared network for service communication
# - Volume mounts for development
# =============================================================================

version: '3.8'

services:
  # ============================= BACKEND SERVICE ==============================
  backend:
    build:
      # Build context is the backend directory
      context: ../../backend
      # Use development-specific Dockerfile
      dockerfile: ../infra/docker/backend/Dockerfile.backend
    env_file:
      # Load environment variables from root .env file
      - ../../.env
    environment:
      # Force development mode
      - NODE_ENV=development
    ports:
      # Expose API port to host machine
      - "8000:8000"
    volumes:
      # Exclude node_modules from bind mount for performance
      - /app/node_modules
    networks:
      # Connect to shared network for service communication
      - app-network
    healthcheck:
      # Regular health checks to ensure service availability
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s

  # ============================= FRONTEND SERVICE ============================
  frontend:
    build:
      # Build context is the frontend directory
      context: ../../frontend
      # Use development-specific Dockerfile
      dockerfile: ../infra/docker/frontend/Dockerfile.frontend
    env_file:
      # Load environment variables from root .env file
      - ../../.env
    environment:
      # Development-specific environment variables
      - VITE_NODE_ENV=development
      - VITE_API_URL=http://localhost:8000/api
    ports:
      # Expose frontend port to host machine
      - "8085:80"
    volumes:
      # Exclude node_modules from bind mount for performance
      - /app/node_modules
      # Mount Nginx configuration for development
      - ./frontend/frontend-nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/frontend-nginx-entrypoint.sh:/docker-entrypoint.d/frontend-nginx-entrypoint.sh:ro
    entrypoint: 
      # Use custom entrypoint script for environment setup
      - "/docker-entrypoint.d/frontend-nginx-entrypoint.sh"
    depends_on:
      # Ensure backend is healthy before starting frontend
      backend:
        condition: service_healthy
    networks:
      # Connect to shared network for service communication
      - app-network
    healthcheck:
      # Regular health checks to ensure service availability
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s

# ============================= NETWORKS ====================================
networks:
  # Shared network for service communication
  app-network:
    # Use bridge driver for local development
    driver: bridge 