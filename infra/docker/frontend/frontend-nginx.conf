# =============================================================================
# CodeLadder Frontend Nginx Configuration
# 
# This configuration file sets up Nginx to serve the React/Vite frontend app
# and proxy API requests to the backend service. It includes:
# - Static file serving
# - API proxying
# - Security headers
# - Compression
# - SPA routing support
# - SSL for HTTPS
# - HTTP to HTTPS redirection
# =============================================================================

# Server block to redirect HTTP to HTTPS
server {
    listen 80;
    server_name codeladder.io www.codeladder.io;
    return 301 https://$host$request_uri;
}

server {
    # Listen on port 443 for HTTPS connections
    listen 443 ssl http2;
    listen [::]:443 ssl http2; # Listen on IPv6 as well
    server_name codeladder.io www.codeladder.io;

    # SSL Configuration - Replace with your actual certificate and key paths
    ssl_certificate /etc/nginx/ssl/codeladder.io.crt;
    ssl_certificate_key /etc/nginx/ssl/codeladder.io.key;

    # Recommended SSL settings (Modern compatibility)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m; # about 40000 sessions
    ssl_session_tickets off;
    # ssl_stapling on; # Requires resolver
    # ssl_stapling_verify on; # Requires resolver and CA cert
    # resolver 8.8.8.8 8.8.4.4 valid=300s; # Example resolver (Google DNS)
    # resolver_timeout 5s;

    # Serve static files from the React/Vite build directory
    # This is where the frontend build artifacts are located
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression for better performance
    # This reduces bandwidth usage and improves load times
    gzip on;
    gzip_types 
        text/plain 
        text/css 
        application/json 
        application/javascript 
        text/xml 
        application/xml 
        application/xml+rss 
        text/javascript;

    # Proxy API requests to the backend service
    # All /api/* requests are forwarded to the backend container
    location /api {
        # Forward requests to the backend service
        proxy_pass http://backend:8000;
        
        # Enable WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # Pass original host header
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable caching for API requests
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint for container orchestration
    # This endpoint is used by Docker health checks
    location /health {
        access_log off;  # Don't log health checks
        return 200 "healthy\\n";
    }

    # Handle Single Page Application (SPA) routing
    # This ensures client-side routing works correctly
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Security headers to protect against common web vulnerabilities
    # X-Frame-Options: Prevent clickjacking attacks
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # X-XSS-Protection: Enable browser's XSS filtering
    add_header X-XSS-Protection "1; mode=block" always;
    
    # X-Content-Type-Options: Prevent MIME-type sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # Strict-Transport-Security (HSTS)
    # Tells browsers to always connect via HTTPS for the next max-age seconds
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Referrer-Policy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
} 