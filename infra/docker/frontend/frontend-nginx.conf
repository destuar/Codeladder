# =============================================================================
# CodeLadder Frontend Nginx Configuration (ALB handles SSL)
#
# This configuration file sets up Nginx to serve the React/Vite frontend app
# and proxy API requests to the backend service. The ALB handles SSL.
# - Static file serving
# - API proxying
# - Security headers
# - Compression
# - SPA routing support
# =============================================================================

server {
    listen 80 default_server; # Listen on port 80, as ALB forwards HTTP here
    listen [::]:80 default_server;

    # You can use a generic server_name or the specific ones if needed.
    # If ALB forwards the Host header correctly, specific names work.
    # Otherwise, a catch-all like '_' or 'localhost' can be used.
    server_name codeladder.io www.codeladder.io localhost _;

    # Serve static files from the React/Vite build directory
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression for better performance
    gzip on;
    gzip_vary on; # Important for proxies
    gzip_proxied any; # Compress for all proxied requests
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types 
        text/plain 
        text/css 
        application/json 
        application/javascript 
        text/xml 
        application/xml 
        application/xml+rss 
        text/javascript
        image/svg+xml; # Added common frontend types

    # Proxy API requests to the backend service
    # All /api/* requests are forwarded to the backend container
    location /api/ { # Ensure trailing slash consistency if backend expects it
        proxy_pass http://backend:8000; # Forward to backend service on port 8000
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade'; # For WebSockets if used by API
        
        proxy_set_header Host $host; # Pass original host
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # X-Forwarded-Proto is set by the ALB correctly when it forwards HTTP
        # It will indicate 'https' if the original request to ALB was HTTPS
        proxy_set_header X-Forwarded-Proto $scheme; 
        
        proxy_cache_bypass $http_upgrade; # Don't cache WebSocket upgrades
        proxy_buffering off; # Useful for streaming/SSE if backend uses them
        # Consider adding timeouts if requests are long
        # proxy_connect_timeout 60s;
        # proxy_send_timeout    60s;
        # proxy_read_timeout    60s;
    }

    # Health check endpoint for container orchestration
    location = /health { # Use exact match for health check
        access_log off;
        return 200 "healthy\\n";
        # Add content type for clarity, though not strictly necessary for 200
        add_header Content-Type text/plain;
    }

    # Handle Single Page Application (SPA) routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Security headers (can be set here or at ALB level)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # HSTS is best handled by ALB or Cloudflare if you use its proxy
}

# Remove the old server block for HTTP to HTTPS redirection
# Remove the old server block for HTTPS on port 443 with SSL certs
# The ALB now handles these. 