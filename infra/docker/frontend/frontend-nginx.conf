# =============================================================================
# CodeLadder Frontend Nginx Configuration
# 
# This configuration file sets up Nginx to serve the React/Vite frontend app
# and proxy API requests to the backend service. It includes:
# - Static file serving
# - API proxying
# - Security headers
# - Compression
# - SPA routing support
# =============================================================================

server {
    # Listen on port 8085 for all IPv4 connections
    listen 8085;
    server_name localhost;

    # Serve static files from the React/Vite build directory
    # This is where the frontend build artifacts are located
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression for better performance
    # This reduces bandwidth usage and improves load times
    gzip on;
    gzip_types 
        text/plain 
        text/css 
        application/json 
        application/javascript 
        text/xml 
        application/xml 
        application/xml+rss 
        text/javascript;

    # Proxy API requests to the backend service
    # All /api/* requests are forwarded to the backend container
    location /api {
        # Forward requests to the backend service
        proxy_pass http://backend:8000;
        
        # Enable WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # Pass original host header
        proxy_set_header Host $host;
        
        # Disable caching for API requests
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint for container orchestration
    # This endpoint is used by Docker health checks
    location /health {
        access_log off;  # Don't log health checks
        return 200 "healthy\n";
    }

    # Handle Single Page Application (SPA) routing
    # This ensures client-side routing works correctly
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Security headers to protect against common web vulnerabilities
    # X-Frame-Options: Prevent clickjacking attacks
    add_header X-Frame-Options "SAMEORIGIN";
    
    # X-XSS-Protection: Enable browser's XSS filtering
    add_header X-XSS-Protection "1; mode=block";
    
    # X-Content-Type-Options: Prevent MIME-type sniffing
    add_header X-Content-Type-Options "nosniff";
} 