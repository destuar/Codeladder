pipeline {
    agent any

    environment {
        EC2_HOST = '3.21.246.147'
        FRONTEND_PORT = '8085'
        BACKEND_PORT = '8000'
        NODE_VERSION = '18.20.7'
        NODE_ENV = 'test'
        API_URL = "http://${EC2_HOST}:${BACKEND_PORT}/api"
    }

    stages {
        stage('Setup Node.js') {
            steps {
                sh '''
                    # Source nvm without output
                    export NVM_DIR="$HOME/.nvm"
                    . "$NVM_DIR/nvm.sh" > /dev/null 2>&1
                    
                    # Install Node.js silently
                    echo "Setting up Node.js environment..."
                    nvm install ${NODE_VERSION} > /dev/null 2>&1
                    nvm use ${NODE_VERSION} > /dev/null 2>&1
                    echo "✓ Node.js ${NODE_VERSION} ready"
                '''
            }
        }

        stage('Frontend Build') {
            steps {
                dir('frontend') {
                    sh '''
                        export NVM_DIR="$HOME/.nvm"
                        . "$NVM_DIR/nvm.sh" > /dev/null 2>&1
                        nvm use ${NODE_VERSION} > /dev/null 2>&1
                        
                        echo "Installing frontend dependencies..."
                        npm install --silent > /dev/null 2>&1
                        echo "✓ Dependencies installed"
                        
                        echo "Building frontend..."
                        npm run build --silent > /dev/null 2>&1 || true
                        echo "✓ Frontend build completed"
                    '''
                }
            }
        }

        stage('Backend Build') {
            steps {
                dir('backend') {
                    sh '''
                        export NVM_DIR="$HOME/.nvm"
                        . "$NVM_DIR/nvm.sh" > /dev/null 2>&1
                        nvm use ${NODE_VERSION} > /dev/null 2>&1
                        
                        echo "Installing backend dependencies..."
                        npm install --silent > /dev/null 2>&1
                        echo "✓ Dependencies installed"
                        
                        echo "Building backend..."
                        npm run build --silent > /dev/null 2>&1
                        echo "✓ Backend build completed"
                    '''
                }
            }
        }

        stage('Backend Security Scan') {
            steps {
                dir('backend') {
                    sh '''
                        export NVM_DIR="$HOME/.nvm"
                        . "$NVM_DIR/nvm.sh" > /dev/null 2>&1
                        nvm use ${NODE_VERSION} > /dev/null 2>&1
                        
                        echo "Running security scan..."
                        npm audit --silent || true
                        echo "✓ Security scan completed"
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            slackSend(
                color: 'good',
                message: "Branch Tests Passed: ${env.BRANCH_NAME}\nBuild Number: ${env.BUILD_NUMBER}"
            )
        }
        failure {
            slackSend(
                color: 'danger',
                message: "Branch Tests Failed: ${env.BRANCH_NAME}\nBuild Number: ${env.BUILD_NUMBER}\nCheck the logs: ${env.BUILD_URL}"
            )
        }
    }
} 