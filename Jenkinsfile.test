pipeline {
    agent {
        label 'codeladder'
    }

    options {
        timeout(time: 5, unit: 'MINUTES')
        disableConcurrentBuilds()
        quietPeriod(0)
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    environment {
        EC2_HOST = '3.21.246.147'
        FRONTEND_PORT = '8085'
        BACKEND_PORT = '8000'
        NODE_VERSION = '18.20.7'
        NODE_ENV = 'test'
        API_URL = "http://${EC2_HOST}:${BACKEND_PORT}/api"
        GIT_SSH_COMMAND = 'ssh -o StrictHostKeyChecking=no'
    }

    stages {
        stage('Setup Workspace') {
            steps {
                sh '''
                    # Verify tools
                    git --version
                    java -version
                    docker --version
                    
                    # Setup workspace
                    mkdir -p /home/ec2-user/jenkins/workspace
                    chmod 755 /home/ec2-user/jenkins/workspace
                '''
            }
        }

        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    userRemoteConfigs: [[
                        url: 'git@github.com:cee8/codeladder.git',
                        credentialsId: 'codeladder-jenkins-key'
                    ]]
                ])
            }
        }

        stage('Cleanup') {
            steps {
                sh '''
                    echo "Cleaning up workspace..."
                    rm -rf *
                    docker system prune -af || true
                    docker volume prune -f || true
                    docker network prune -f || true
                    
                    echo "Current disk space:"
                    df -h
                '''
            }
        }

        stage('Security Scan') {
            steps {
                dir('backend') {
                    sh '''
                        echo "Running security scan..."
                        npm audit --production || true
                        echo "âœ“ Security scan completed"
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
} 